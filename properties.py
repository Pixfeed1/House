# ##### BEGIN GPL LICENSE BLOCK #####
#
#  House - Properties Module (BLENDER 4.2+ COMPATIBLE)
#  Copyright (C) 2025 mvaertan
#
#  ‚úÖ CORRIG√â - Lazy loading de pbr_scanner pour √©viter l'erreur _RestrictData
#
# ##### END GPL LICENSE BLOCK #####

import bpy
from bpy.types import PropertyGroup
from bpy.props import (
    FloatProperty,
    IntProperty,
    BoolProperty,
    EnumProperty,
    StringProperty,
    FloatVectorProperty,
    PointerProperty,
)


def regenerate_house(self, context):
    """Callback pour r√©g√©n√©rer la maison quand une propri√©t√© change"""
    if hasattr(context.scene, 'house_auto_update') and context.scene.house_auto_update:
        # D√©clencher la r√©g√©n√©ration (sera impl√©ment√© plus tard)
        pass


def get_brick_presets_safe(self, context):
    """Wrapper s√©curis√© pour get_brick_preset_items avec fallback
    
    ‚úÖ CORRECTION: Lazy loading du scanner pour √©viter l'import au chargement du module
    """
    # ‚úÖ Importer seulement quand on en a besoin (lazy loading)
    try:
        from .materials import pbr_scanner
        return pbr_scanner.get_brick_preset_items(self, context)
    except Exception as e:
        print(f"[House] ‚ö†Ô∏è Erreur scan PBR: {e}")
    
    # Fallback: presets hardcod√©s si le scanner ne marche pas
    return [
        ('BRICK_RED', "üß± Briques rouges", "Briques rouges traditionnelles", 'MATERIAL', 0),
        ('BRICK_RED_DARK', "üß± Briques rouges fonc√©es", "Briques rouges sombres", 'MATERIAL', 1),
        ('BRICK_ORANGE', "üß± Briques orang√©es", "Briques orang√©es/terre cuite", 'MATERIAL', 2),
        ('BRICK_BROWN', "üß± Briques brunes", "Briques brunes/chocolat", 'MATERIAL', 3),
        ('BRICK_YELLOW', "üß± Briques jaunes (London)", "Briques jaunes type London", 'MATERIAL', 4),
        ('BRICK_GREY', "üß± Briques grises modernes", "Briques grises contemporaines", 'MATERIAL', 5),
    ]


class HouseGeneratorProperties(PropertyGroup):
    """Propri√©t√©s pour le g√©n√©rateur de maison"""
    
    # ============================================================
    # MODE DE G√âN√âRATION
    # ============================================================
    
    generation_mode: EnumProperty(
        name="Mode",
        description="Mode de g√©n√©ration de la maison",
        items=[
            ('AUTO', "Automatique", "G√©n√©ration automatique selon des crit√®res", 'AUTO', 0),
            ('MANUAL', "Plan Manuel", "Construction √† partir d'un plan 2D", 'GREASEPENCIL', 1),
        ],
        default='AUTO'
    )
    
    # ============================================================
    # DIMENSIONS G√âN√âRALES
    # ============================================================
    
    house_width: FloatProperty(
        name="Largeur",
        description="Largeur de la maison (axe X)",
        default=10.0,
        min=3.0,
        max=50.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    house_length: FloatProperty(
        name="Longueur",
        description="Longueur de la maison (axe Y)",
        default=12.0,
        min=3.0,
        max=50.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    num_floors: IntProperty(
        name="Nombre d'√©tages",
        description="Nombre d'√©tages de la maison",
        default=1,
        min=1,
        max=4,
        update=regenerate_house
    )
    
    floor_height: FloatProperty(
        name="Hauteur d'√©tage",
        description="Hauteur d'un √©tage",
        default=2.7,
        min=2.0,
        max=4.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    wall_thickness: FloatProperty(
        name="√âpaisseur murs",
        description="√âpaisseur des murs ext√©rieurs",
        default=0.3,
        min=0.1,
        max=0.6,
        unit='LENGTH',
        update=regenerate_house
    )
    
    # ============================================================
    # STYLE ARCHITECTURAL
    # ============================================================
    
    architectural_style: EnumProperty(
        name="Style",
        description="Style architectural de la maison",
        items=[
            ('MODERN', "Moderne", "Architecture contemporaine minimaliste"),
            ('TRADITIONAL', "Traditionnel", "Style classique europ√©en"),
            ('MEDITERRANEAN', "M√©diterran√©en", "Style villa du sud"),
            ('CONTEMPORARY', "Contemporain", "Style moderne mixte"),
            ('ASIAN', "Asiatique", "Style japonais/chinois"),
        ],
        default='TRADITIONAL',
        update=regenerate_house
    )
    
    # ============================================================
    # TOIT
    # ============================================================
    
    roof_type: EnumProperty(
        name="Type de toit",
        description="Forme du toit",
        items=[
            ('GABLE', "Pignon", "Toit √† deux pentes (standard)"),
            ('HIP', "Croupe", "Toit √† quatre pentes"),
            ('FLAT', "Plat", "Toit-terrasse"),
            ('GAMBREL', "Mansarde", "Toit √† combles"),
            ('SHED', "Monopente", "Toit √† une seule pente"),
        ],
        default='GABLE',
        update=regenerate_house
    )
    
    roof_pitch: FloatProperty(
        name="Pente du toit",
        description="Angle de pente du toit en degr√©s",
        default=35.0,
        min=5.0,
        max=60.0,
        subtype='ANGLE',
        update=regenerate_house
    )
    
    roof_overhang: FloatProperty(
        name="D√©bord de toit",
        description="Longueur du d√©bord du toit",
        default=0.5,
        min=0.0,
        max=2.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    # ============================================================
    # FONDATIONS
    # ============================================================
    
    foundation_height: FloatProperty(
        name="Hauteur fondations",
        description="Hauteur visible des fondations",
        default=0.5,
        min=0.0,
        max=2.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    # ============================================================
    # FEN√äTRES
    # ============================================================
    
    window_width: FloatProperty(
        name="Largeur fen√™tre",
        description="Largeur standard des fen√™tres",
        default=1.2,
        min=0.6,
        max=3.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    window_height: FloatProperty(
        name="Hauteur fen√™tre",
        description="Hauteur standard des fen√™tres",
        default=1.4,
        min=0.8,
        max=2.5,
        unit='LENGTH',
        update=regenerate_house
    )
    
    window_height_ratio: FloatProperty(
        name="Ratio hauteur fen√™tre",
        description="Ratio de hauteur par rapport √† la hauteur de l'√©tage (0.4 = 40%)",
        default=0.4,
        min=0.2,
        max=0.8,
        update=regenerate_house
    )
    
    window_type: EnumProperty(
        name="Type fen√™tre",
        description="Type de fen√™tre par d√©faut",
        items=[
            ('CASEMENT', "Battant", "Fen√™tre √† battant (standard europ√©en)"),
            ('SLIDING', "Coulissante", "Fen√™tre coulissante horizontale"),
            ('FIXED', "Fixe", "Fen√™tre fixe (ne s'ouvre pas)"),
            ('DOUBLE_HUNG', "Guillotine", "Fen√™tre √† guillotine (style am√©ricain)"),
            ('ARCHED', "Cintr√©e", "Fen√™tre avec arc en haut"),
            ('PICTURE', "Panoramique", "Grande baie vitr√©e"),
        ],
        default='CASEMENT',
        update=regenerate_house
    )
    
    window_quality: EnumProperty(
        name="Qualit√© fen√™tres",
        description="Niveau de d√©tail des fen√™tres",
        items=[
            ('LOW', "Basse", "Peu de d√©tails, rapide (pour grandes sc√®nes)", 0),
            ('MEDIUM', "Moyenne", "Bon √©quilibre d√©tails/performance", 1),
            ('HIGH', "Haute", "Maximum de d√©tails (pour rendus finaux)", 2),
        ],
        default='MEDIUM',
        update=regenerate_house
    )
    
    num_windows_front: IntProperty(
        name="Fen√™tres fa√ßade",
        description="Nombre de fen√™tres sur la fa√ßade avant",
        default=3,
        min=0,
        max=10,
        update=regenerate_house
    )
    
    num_windows_side: IntProperty(
        name="Fen√™tres c√¥t√©s",
        description="Nombre de fen√™tres sur les c√¥t√©s",
        default=2,
        min=0,
        max=10,
        update=regenerate_house
    )
    
    num_windows_back: IntProperty(
        name="Fen√™tres arri√®re",
        description="Nombre de fen√™tres sur la fa√ßade arri√®re",
        default=2,
        min=0,
        max=10,
        update=regenerate_house
    )
    
    window_spacing: FloatProperty(
        name="Espacement fen√™tres",
        description="Espacement entre les fen√™tres",
        default=2.0,
        min=0.5,
        max=5.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    # ============================================================
    # PORTES
    # ============================================================
    
    door_width: FloatProperty(
        name="Largeur porte",
        description="Largeur de la porte d'entr√©e",
        default=1.0,
        min=0.8,
        max=2.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    # Alias pour compatibilit√©
    front_door_width: FloatProperty(
        name="Largeur porte entr√©e",
        description="Alias pour door_width",
        default=1.0,
        min=0.8,
        max=2.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    door_height: FloatProperty(
        name="Hauteur porte",
        description="Hauteur de la porte d'entr√©e",
        default=2.1,
        min=1.8,
        max=2.5,
        unit='LENGTH',
        update=regenerate_house
    )
    
    door_type: EnumProperty(
        name="Type porte",
        description="Type de porte d'entr√©e",
        items=[
            ('SINGLE', "Simple", "Porte simple battant"),
            ('DOUBLE', "Double", "Porte double battant"),
            ('SLIDING', "Coulissante", "Porte coulissante"),
            ('FRENCH', "Fran√ßaise", "Porte-fen√™tre vitr√©e"),
        ],
        default='SINGLE',
        update=regenerate_house
    )
    
    door_quality: EnumProperty(
        name="Qualit√© portes",
        description="Niveau de d√©tail des portes",
        items=[
            ('LOW', "Basse", "Peu de d√©tails", 0),
            ('MEDIUM', "Moyenne", "Bon √©quilibre", 1),
            ('HIGH', "Haute", "Maximum de d√©tails", 2),
        ],
        default='MEDIUM',
        update=regenerate_house
    )
    
    # ============================================================
    # GARAGE
    # ============================================================
    
    add_garage: BoolProperty(
        name="Ajouter garage",
        description="Ajouter un garage √† la maison",
        default=False,
        update=regenerate_house
    )
    
    # Alias pour compatibilit√© avec l'ancien code
    include_garage: BoolProperty(
        name="Inclure garage",
        description="Inclure un garage (alias pour add_garage)",
        default=False,
        update=regenerate_house
    )
    
    garage_width: FloatProperty(
        name="Largeur garage",
        description="Largeur du garage",
        default=3.0,
        min=2.5,
        max=6.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    garage_depth: FloatProperty(
        name="Profondeur garage",
        description="Profondeur du garage",
        default=5.0,
        min=4.0,
        max=8.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    garage_position: EnumProperty(
        name="Position garage",
        description="Position du garage par rapport √† la maison",
        items=[
            ('LEFT', "Gauche", "Garage sur le c√¥t√© gauche"),
            ('RIGHT', "Droite", "Garage sur le c√¥t√© droit"),
            ('FRONT', "Avant", "Garage en fa√ßade"),
            ('ATTACHED', "Attach√©", "Garage int√©gr√© √† la maison"),
        ],
        default='LEFT',
        update=regenerate_house
    )
    
    # ============================================================
    # BALCONS / TERRASSES
    # ============================================================
    
    add_balcony: BoolProperty(
        name="Ajouter balcon",
        description="Ajouter un balcon aux √©tages sup√©rieurs",
        default=False,
        update=regenerate_house
    )
    
    # Alias pour compatibilit√©
    include_balcony: BoolProperty(
        name="Inclure balcon",
        description="Alias pour add_balcony (compatibilit√©)",
        default=False,
        update=regenerate_house
    )
    
    # Propri√©t√©s terrasse (manquantes)
    add_terrace: BoolProperty(
        name="Ajouter terrasse",
        description="Ajouter une terrasse au rez-de-chauss√©e",
        default=False,
        update=regenerate_house
    )
    
    include_terrace: BoolProperty(
        name="Inclure terrasse",
        description="Alias pour add_terrace (compatibilit√©)",
        default=False,
        update=regenerate_house
    )
    
    balcony_width: FloatProperty(
        name="Largeur balcon",
        description="Largeur du balcon",
        default=2.0,
        min=1.0,
        max=4.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    balcony_depth: FloatProperty(
        name="Profondeur balcon",
        description="Profondeur du balcon",
        default=1.2,
        min=0.8,
        max=2.0,
        unit='LENGTH',
        update=regenerate_house
    )
    
    # ============================================================
    # QUALIT√â GLOBALE
    # ============================================================
    
    global_quality: EnumProperty(
        name="Qualit√© globale",
        description="Niveau de d√©tail g√©n√©ral de la maison",
        items=[
            ('LOW', "Basse (rapide)", "Peu de d√©tails, optimis√© pour l'√©dition", 'PREFERENCES', 0),
            ('MEDIUM', "Moyenne", "Bon √©quilibre entre qualit√© et performance", 'PREFERENCES', 1),
            ('HIGH', "Haute (lent)", "Maximum de d√©tails pour rendus finaux", 'PREFERENCES', 2),
        ],
        default='MEDIUM',
        update=regenerate_house
    )
    
    # ============================================================
    # MAT√âRIAUX ET TEXTURES
    # ============================================================
    
    use_materials: BoolProperty(
        name="Utiliser mat√©riaux",
        description="Appliquer automatiquement des mat√©riaux",
        default=True
    )
    
    # ============================================================
    # PROPRI√âT√âS AJOUT√âES : CONSTRUCTION MURS BRIQUES 3D
    # ============================================================
    
    wall_construction_type: EnumProperty(
        name="Type de construction murs",
        description="M√©thode de construction des murs",
        items=[
            ('SIMPLE', "Mur simple", "Mur simple avec mat√©riau shader", 'SHADING_TEXTURE', 0),
            ('BRICK_3D', "Briques 3D", "Mur avec vraies briques 3D g√©om√©triques", 'MESH_CUBE', 1),
        ],
        default='SIMPLE',
        update=regenerate_house
    )
    
    brick_3d_quality: EnumProperty(
        name="Qualit√© briques 3D",
        description="Niveau de d√©tail des briques 3D",
        items=[
            ('LOW', "Basse", "Instancing simple (rapide)", 0),
            ('MEDIUM', "Moyenne", "Instancing avec briques d√©taill√©es", 1),
            ('HIGH', "Haute", "G√©om√©trie compl√®te (lourd!)", 2),
        ],
        default='MEDIUM',
        update=regenerate_house
    )
    
    brick_material_mode: EnumProperty(
        name="Mode mat√©riau briques 3D",
        description="Comment appliquer le mat√©riau aux briques",
        items=[
            ('COLOR', "Couleur unie", "Utiliser une couleur unie", 0),
            ('PRESET', "Preset", "Utiliser un preset de mat√©riau", 1),
            ('CUSTOM', "Personnalis√©", "Utiliser mat√©riau custom", 2),
        ],
        default='PRESET',
        update=regenerate_house
    )
    
    brick_preset_type: EnumProperty(
        name="Preset briques",
        description="Type de briques √† utiliser",
        items=get_brick_presets_safe,
        update=regenerate_house
    )
    
    brick_solid_color: FloatVectorProperty(
        name="Couleur briques 3D",
        description="Couleur pour les briques 3D",
        subtype='COLOR',
        size=4,
        default=(0.65, 0.25, 0.15, 1.0),
        update=regenerate_house
    )
    
    brick_custom_material: PointerProperty(
        name="Mat√©riau custom",
        description="Mat√©riau personnalis√© pour briques 3D",
        type=bpy.types.Material
    )
    
    wall_material_type: EnumProperty(
        name="Mat√©riau murs",
        description="Type de mat√©riau pour les murs ext√©rieurs",
        items=[
            ('BRICK_RED', "Briques rouges", "Briques traditionnelles rouges", 'MATERIAL', 0),
            ('BRICK_RED_DARK', "Briques rouges fonc√©es", "Briques rouge fonc√©", 'MATERIAL', 1),
            ('BRICK_ORANGE', "Briques orang√©es", "Briques orange terre cuite", 'MATERIAL', 2),
            ('BRICK_BROWN', "Briques brunes", "Briques marron", 'MATERIAL', 3),
            ('BRICK_YELLOW', "Briques jaunes", "Briques jaunes (style London)", 'MATERIAL', 4),
            ('BRICK_GREY', "Briques grises", "Briques grises modernes", 'MATERIAL', 5),
            ('BRICK_WHITE', "Briques blanches", "Briques peintes en blanc", 'MATERIAL', 6),
            ('BRICK_PAINTED', "Briques peintes", "Briques avec couleur personnalis√©e", 'COLOR', 7),
        ],
        default='BRICK_RED',
        update=regenerate_house
    )
    
    wall_brick_quality: EnumProperty(
        name="Qualit√© mat√©riau briques",
        description="Niveau de d√©tail du mat√©riau shader des briques (pour mur simple)",
        items=[
            ('LOW', "Basse", "Peu de d√©tails shader (grandes sc√®nes)", 'PREFERENCES', 0),
            ('MEDIUM', "Moyenne", "Bon √©quilibre", 'PREFERENCES', 1),
            ('HIGH', "Haute", "Maximum de d√©tails shader", 'PREFERENCES', 2),
        ],
        default='MEDIUM',
        update=regenerate_house
    )
    
    wall_brick_color: FloatVectorProperty(
        name="Couleur briques",
        description="Couleur personnalis√©e pour les briques peintes",
        subtype='COLOR',
        size=4,
        min=0.0,
        max=1.0,
        default=(0.8, 0.7, 0.5, 1.0),
        update=regenerate_house
    )
    
    # ============================================================
    # PROPRI√âT√â AJOUT√âE : CHOIX BRIQUES 3D OU SIMPLE MAT√âRIAU
    # ============================================================
    
    use_geometry_bricks: BoolProperty(
        name="Utiliser briques 3D",
        description="Utiliser de vraies briques 3D g√©om√©triques au lieu d'un simple mat√©riau shader",
        default=False,
        update=regenerate_house
    )
    
    geometry_brick_quality: EnumProperty(
        name="Qualit√© briques 3D",
        description="Niveau de d√©tail de la g√©om√©trie des briques 3D",
        items=[
            ('LOW', "Basse (Instancing)", "Utilise l'instancing pour optimiser (grandes sc√®nes)", 'MESH_CUBE', 0),
            ('MEDIUM', "Moyenne (Instancing HQ)", "Instancing avec briques haute qualit√©", 'MESH_UVSPHERE', 1),
            ('HIGH', "Haute (G√©om√©trie compl√®te)", "Chaque brique est unique (lourd!)", 'MESH_ICOSPHERE', 2),
        ],
        default='MEDIUM',
        update=regenerate_house
    )
    
    wall_material_color: FloatVectorProperty(
        name="Couleur murs (legacy)",
        description="Couleur des murs (ancienne propri√©t√©, conserv√©e pour compatibilit√©)",
        subtype='COLOR',
        default=(0.9, 0.9, 0.85),
        min=0.0,
        max=1.0,
        size=3
    )
    
    roof_color: FloatVectorProperty(
        name="Couleur toit",
        description="Couleur du toit",
        subtype='COLOR',
        default=(0.4, 0.2, 0.1),
        min=0.0,
        max=1.0,
        size=3,
        update=regenerate_house
    )
    
    roof_material_color: FloatVectorProperty(
        name="Couleur toit",
        description="Couleur du toit",
        subtype='COLOR',
        default=(0.3, 0.2, 0.15),
        min=0.0,
        max=1.0,
        size=3
    )
    
    floor_material_color: FloatVectorProperty(
        name="Couleur sol",
        description="Couleur du sol",
        subtype='COLOR',
        default=(0.7, 0.6, 0.5),
        min=0.0,
        max=1.0,
        size=3
    )
    
    # ============================================================
    # MODE MANUEL
    # ============================================================
    
    exterior_wall_thickness: FloatProperty(
        name="Mur ext√©rieur",
        description="√âpaisseur des murs ext√©rieurs",
        default=0.25,
        min=0.15,
        max=0.60,
        unit='LENGTH',
        precision=3
    )
    
    interior_wall_thickness: FloatProperty(
        name="Mur int√©rieur",
        description="√âpaisseur des murs int√©rieurs",
        default=0.10,
        min=0.05,
        max=0.25,
        unit='LENGTH',
        precision=3
    )
    
    manual_floor_height: FloatProperty(
        name="Hauteur √©tage",
        description="Hauteur d'un √©tage en mode manuel",
        default=2.7,
        min=2.0,
        max=4.0,
        unit='LENGTH',
        precision=2
    )
    
    manual_door_height: FloatProperty(
        name="Hauteur porte",
        description="Hauteur standard des portes",
        default=2.1,
        min=1.8,
        max=2.5,
        unit='LENGTH',
        precision=2
    )
    
    manual_window_height: FloatProperty(
        name="Hauteur fen√™tre",
        description="Hauteur standard des fen√™tres",
        default=1.2,
        min=0.5,
        max=2.0,
        unit='LENGTH',
        precision=2
    )
    
    manual_window_sill_height: FloatProperty(
        name="Hauteur all√®ge",
        description="Hauteur du bas de fen√™tre par rapport au sol",
        default=0.9,
        min=0.3,
        max=1.5,
        unit='LENGTH',
        precision=2
    )
    
    plan_image_path: StringProperty(
        name="Chemin du plan",
        description="Chemin vers l'image du plan 2D",
        default="",
        subtype='FILE_PATH'
    )
    
    plan_scale: FloatProperty(
        name="√âchelle du plan",
        description="√âchelle du plan import√© (m√®tres par pixel)",
        default=0.01,
        min=0.001,
        max=1.0,
        precision=4
    )
    
    plan_opacity: FloatProperty(
        name="Opacit√© du plan",
        description="Opacit√© de l'image de r√©f√©rence",
        default=0.5,
        min=0.0,
        max=1.0,
        subtype='FACTOR'
    )
    
    # ============================================================
    # OPTIONS AVANC√âES
    # ============================================================
    
    auto_lighting: BoolProperty(
        name="√âclairage automatique",
        description="Ajouter des lumi√®res √† la sc√®ne",
        default=True
    )
    
    collection_name: StringProperty(
        name="Nom collection",
        description="Nom de la collection o√π cr√©er la maison",
        default="House"
    )
    
    show_dimensions: BoolProperty(
        name="Afficher dimensions",
        description="Afficher les dimensions sur la maison",
        default=False
    )
    
    show_grid: BoolProperty(
        name="Afficher grille",
        description="Afficher une grille de r√©f√©rence",
        default=True
    )
    
    random_seed: IntProperty(
        name="Seed al√©atoire",
        description="Seed pour la g√©n√©ration proc√©durale (0 = al√©atoire)",
        default=0,
        min=0,
        max=999999
    )
    
    advanced_mode: BoolProperty(
        name="Mode avanc√©",
        description="Afficher les options avanc√©es et le scripting Python",
        default=False
    )
    
    python_script: StringProperty(
        name="Script Python",
        description="Script Python personnalis√© pour g√©n√©rer la maison",
        default=""
    )


# Classes √† enregistrer
classes = (
    HouseGeneratorProperties,
)


def register():
    """Enregistrement des propri√©t√©s"""
    for cls in classes:
        bpy.utils.register_class(cls)
    
    bpy.types.Scene.house_generator = bpy.props.PointerProperty(type=HouseGeneratorProperties)
    bpy.types.Scene.house_auto_update = bpy.props.BoolProperty(
        name="Mise √† jour auto",
        description="R√©g√©n√©rer automatiquement la maison quand les param√®tres changent",
        default=False
    )
    
    print("[House] Propri√©t√©s enregistr√©es")
    print("  ‚úì Syst√®me mat√©riaux briques 3 modes (COLOR/PRESET/CUSTOM)")
    print("  ‚úì Scan automatique textures PBR activ√© (lazy loading)")


def unregister():
    """D√©senregistrement des propri√©t√©s"""
    del bpy.types.Scene.house_generator
    del bpy.types.Scene.house_auto_update
    
    for cls in reversed(classes):
        bpy.utils.unregister_class(cls)
    
    print("[House] Propri√©t√©s d√©senregistr√©es")